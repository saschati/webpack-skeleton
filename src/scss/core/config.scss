@use 'sass:list' as list;
@use 'src/scss/core/helpers' as h;

// ============= COLORS =============

$_colors: (
  white: #FFFFFF,
  black: #000000,
  dark: #21243D,
  primary: #FF6464,
  water: #EDF7FA,
  dark-blue: #142850,
  light: #8695A4,
  light-red: #8ff7c7,
  very-light-red: #ff7c7c,
  light-gray: #e0e0e0,
  strong-cyan: #00a8cc,
);

/**
 * @param $by {hex, name} default false
 */
@function colors($by: false) {
  @if ($by) {
    $colors: ();
    @each $name, $color in $_colors {
      $colors: list.append($colors, if($by == hex, $color, h.to-string($name)), comma);
    }

    @return $colors;
  }

  @return $_colors;
}
// ============= COLORS =============

// ============= TEXT SIZES =============
$baseSize: 16px;
$_sizes: (
  // Small
  (name: sx1, size: 0.81rem,  base: 14px),
  // Normal
  (name: no,  size: 1rem,     base: 16px),
  (name: nx1, size: 1.125rem, base: 18px),
  (name: nx2, size: 1.25rem,  base: 20px),
  (name: nx3, size: 1.375rem, base: 22px),
  (name: nx4, size: 1.5rem,   base: 24px),
  (name: nx5, size: 1.625rem, base: 26px),
  (name: nx6, size: 1.875rem, base: 30px),
  // Medium
  (name: mx1, size: 2rem,     base: 32px),
  (name: mx2, size: 2.125rem, base: 34px),
  (name: mx3, size: 2.75rem,  base: 44px),
);

@function sizes($key: false, $value: false) {
  @if ($key) {
    $sizes: ();
    @each $link in $_sizes {
      $bug: (map-get($link, $key): map-get($link, $value));

      $sizes: map-merge($sizes, $bug);
    }

    @return $sizes;
  }

  @return $_sizes;
}
// ============= TEXT SIZES =============

// ============= LINE HEIGHT =============
$lineHeight: 24px;
// ============= LINE HEIGHT =============

// ============= FONTS =============
$_fonts: (
   common: ('Heebo', sans-serif),
);

@function fonts($name) {
  @return map-get($_fonts, $name);
}
// ============= FONTS =============